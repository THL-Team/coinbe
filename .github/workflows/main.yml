name: Main workflow
on:
  push:
    branches:
      - main
env:
  WORKSPACE: /home/backend
  PROJECT_NAME: nest-docker-vps-cicd
jobs:
  test-build:
    name: Test build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install --force
      - name: Get Project Name
        id: get_project
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ \[cd-(.*)\] ]]; then
            echo "::set-output name=project::${BASH_REMATCH[1]}"
          else
            echo ::set-output name=project::null
          fi
      - name: Build All App
        run: |
          if [[ "${{ steps.get_project.outputs.project }}" != "null" ]]; then
              echo "Build ${{ steps.get_project.outputs.project }}"
              npm run build:${{ steps.get_project.outputs.project }}
          else
              echo "Not found app to build"
          fi

  test-docker-build:
    name: Test Docker Build
    runs-on: ubuntu-latest
    needs: test-build  # Job này sẽ chạy sau khi 'test-build' hoàn thành
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
      - name: Install Docker Compose
        run: sudo apt-get install docker-compose
      - name: Get Project Name
        id: get_project
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ \[cd-(.*)\] ]]; then
            echo "::set-output name=project::${BASH_REMATCH[1]}"
          else
            echo ::set-output name=project::null
          fi
      - name: Build and push Docker images
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: |
          if [[ "${{ steps.get_project.outputs.project }}" != "null" ]]; then
              echo "Deploying ${{ steps.get_project.outputs.project }}"
              docker-compose -f docker-compose.yml build ${{ steps.get_project.outputs.project }}
          else
              echo "Not found docker file to build"
          fi

  deploy:
    name: Go To Production
    runs-on: self-hosted
    needs: test-docker-build  # Job này sẽ chạy sau khi 'test-docker-build' hoàn thành
    steps:
      - name: If Folder Not Found Clone
        run: |
          # Tạo thư mục nếu nó không tồn tại
          if [ ! -d "$WORKSPACE/$PROJECT_NAME" ]; then
            mkdir -p "$WORKSPACE/$PROJECT_NAME"
            cd "$WORKSPACE"
            git clone https://${{ secrets.GH_TOKEN }}@github.com/trungthanh12081997/$PROJECT_NAME.git
          else
            echo "Directory already exists: $WORKSPACE/$PROJECT_NAME"
          fi
        shell: bash
        env:
          WORKSPACE: /home/backend
          PROJECT_NAME: nest-docker-vps-cicd

      - name: Deploy
        run: |
          echo "Deploying"
          cd "$WORKSPACE/$PROJECT_NAME"
          git config credential.helper '!f() { sleep 1; echo "username=${{ secrets.GH_USER }}"; echo "password=${{ secrets.GH_TOKEN }}"; }; f'
          git checkout main
          git pull --force

          CONTAINER_EXISTS=$(docker-compose -f docker-compose.yml ps -q)
          if [ -n "$CONTAINER_EXISTS" ]; then
            IMAGE_NAME="${{ env.PROJECT_NAME }}"

            # Lấy ID của container từ image
            CONTAINER_ID=$(docker ps -q --filter "ancestor=$IMAGE_NAME")
            echo "CONTAINER ID : $CONTAINER_ID"
            if [ -n "$CONTAINER_ID" ]; then
              docker stop $CONTAINER_ID
              docker rm $CONTAINER_ID 
              docker image rm $IMAGE_NAME
            else
              echo "No containers found for image $IMAGE_NAME"
            fi
          else
            echo "No running containers for service $IMAGE_NAME"
          fi

          docker-compose up -d
        shell: bash
